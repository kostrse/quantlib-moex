name: Python Wheels

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  build_wheels:
    name: Build Python wheels using QuantLib-SWIG devenv
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lballabio/quantlib-swig-devenv:python
      # This image should have QuantLib, Boost, SWIG, and other dependencies pre-installed
      # to ensure compatibility with QuantLib-SWIG build environment

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Verify submodule initialization
        run: |
          echo "Checking submodule status..."
          git submodule status
          ls -la vendor/quantlib/
          if [ ! -f "vendor/quantlib/CMakeLists.txt" ]; then
            echo "QuantLib submodule not properly initialized, forcing update..."
            git submodule update --init --recursive --force
          fi

      - name: Set up Python environment
        run: |
          python3 --version
          pip3 install --upgrade pip setuptools wheel

      - name: Install build dependencies
        run: |
          pip3 install scikit-build-core
          # SWIG should already be available in the QuantLib-SWIG devenv image

      - name: Verify build environment
        run: |
          echo "Python version:"
          python3 --version
          echo "SWIG version:"
          swig -version
          echo "CMake version:"
          cmake --version
          echo "Boost version:"
          find /usr -name "boost" -type d 2>/dev/null | head -5 || echo "Boost search completed"
          pkg-config --exists 'boost >= 1.58' && echo "Boost found via pkg-config" || echo "Boost not found via pkg-config"
          echo "QuantLib info (should be available in QuantLib-SWIG devenv):"
          find /usr -name "*quantlib*" -type f 2>/dev/null | head -5 || echo "QuantLib search completed"

      - name: Build wheel
        run: |
          # Build wheel using the project's build system (scikit-build-core + CMake)
          pip3 wheel . --no-build-isolation --wheel-dir wheelhouse --verbose

      - name: Test wheel
        run: |
          pip3 install wheelhouse/*.whl
          python3 -c "
          import QuantLib as ql
          from qlmoex import MoexGCurve
          today = ql.Date(7, 6, 2025)
          curve = MoexGCurve(today, 0.0095, -0.018, 0.025, 1.5, [0.0002, -0.00015, 0.00005])
          result = curve.discount(0.5)
          assert result > 0.0
          print(f'Test passed! discount(0.5) = {result}')
          "

      - uses: actions/upload-artifact@v4
        with:
          name: python-wheels-quantlib-swig
          path: wheelhouse/*.whl